version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - crawler-network
   
  master:
    build:
      context: .
      dockerfile: ./master/Dockerfile
    container_name: crawler-master
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - CONTROLLED_MODE=true
    networks:
      - crawler-network
    restart: on-failure
    stdin_open: true
    tty: true

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    networks:
      - crawler-network

  kafka-init:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - kafka
    entrypoint: ['/bin/sh', '-c']
    command: |
      "
      cub kafka-ready -b kafka:9092 1 60
      
      for topic in urls_priority_1 urls_priority_2 urls_priority_3 urls_priority_4 urls_priority_5; do
        kafka-topics --delete --if-exists --bootstrap-server kafka:9092 --topic $$topic || true
      done
      
      sleep 10
      
       # Create priority 1 and 2 topics with 1 partition each (single worker)
       for topic in urls_priority_1 urls_priority_2; do
         kafka-topics --create --bootstrap-server kafka:9092 --partitions 2 --replication-factor 1 --topic $$topic
       done
       
       # Create priority 3, 4, and 5 topics with 3 partitions each (multiple workers)
       for topic in urls_priority_3 urls_priority_4 urls_priority_5; do
         kafka-topics --create --bootstrap-server kafka:9092 --partitions 6 --replication-factor 1 --topic $$topic
       done
      
      kafka-topics --describe --bootstrap-server kafka:9092
      "
    networks:
      - crawler-network
  worker-1:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-1
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=0
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_1"]
    volumes:
      - ./storage:/mnt/storage
    networks:
      - crawler-network
    restart: unless-stopped
  
  worker-2:
    build: 
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-2
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=0
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_2"]
    networks:
      - crawler-network
    restart: unless-stopped


  # Workers for priority 3 (3 partitions)
  worker-3:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-3
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=0
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_3"]
    networks:
      - crawler-network

  worker-4:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-4
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=1
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_3"]
    networks:
      - crawler-network

  worker-5:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-5
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=2
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_3"]
    networks:
      - crawler-network
  
  worker-6:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-6
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=0
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_3"]
    networks:
      - crawler-network

  worker-7:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-7
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=1
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_3"]
    networks:
      - crawler-network

  worker-8:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-8
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=2
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_3"]
    networks:
      - crawler-network

  # Workers for priority 4
  worker-9:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-9
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=0
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_4"]
    networks:
      - crawler-network

  worker-10:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-10
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=1
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_4"]
    networks:
      - crawler-network

  worker-11:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-11
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=2
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_4"]
    networks:
      - crawler-network
    
  worker-12:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-12
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=0
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_4"]
    networks:
      - crawler-network

  worker-13:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-13
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=1
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_4"]
    networks:
      - crawler-network

  worker-14:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-14
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=2
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_4"]
    networks:
      - crawler-network

  # Workers for priority 5
  worker-15:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-15
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=0
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_5"]
    networks:
      - crawler-network

  worker-16:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-16
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=1
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_5"]
    networks:
      - crawler-network

  worker-17:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-17
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=2
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_5"]
    networks:
      - crawler-network
  
  worker-18:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-18
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=0
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_5"]
    networks:
      - crawler-network

  worker-19:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-19
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=1
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_5"]
    networks:
      - crawler-network

  worker-20:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: crawler-worker-20
    depends_on:
      - kafka
      - kafka-init
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_PARTITION=2
    command: ["/bin/sh", "-c", "sleep 15 && python -m src.crawler.core.worker urls_priority_5"]
    networks:
      - crawler-network

networks:
  crawler-network:
    driver: bridge
